{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDraggable = require(\"react-draggable\");\n\nvar _utils = require(\"./utils\");\n\nvar _propTypes = require(\"./propTypes\");\n\nvar _excluded = [\"children\", \"className\", \"draggableOpts\", \"width\", \"height\", \"handle\", \"handleSize\", \"lockAspectRatio\", \"axis\", \"minConstraints\", \"maxConstraints\", \"onResize\", \"onResizeStop\", \"onResizeStart\", \"resizeHandles\", \"transformScale\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n} // The base <Resizable> component.\n// This component does not have state and relies on the parent to set its props based on callback data.\n\n\nvar Resizable = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Resizable, _React$Component);\n\n  function Resizable() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.handleRefs = {};\n    _this.lastHandleRect = null;\n    _this.slack = null;\n    return _this;\n  }\n\n  var _proto = Resizable.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.resetData();\n  };\n\n  _proto.resetData = function resetData() {\n    this.lastHandleRect = this.slack = null;\n  } // Clamp width and height within provided constraints\n  ;\n\n  _proto.runConstraints = function runConstraints(width, height) {\n    var _this$props = this.props,\n        minConstraints = _this$props.minConstraints,\n        maxConstraints = _this$props.maxConstraints,\n        lockAspectRatio = _this$props.lockAspectRatio; // short circuit\n\n    if (!minConstraints && !maxConstraints && !lockAspectRatio) return [width, height]; // If constraining to min and max, we need to also fit width and height to aspect ratio.\n\n    if (lockAspectRatio) {\n      var ratio = this.props.width / this.props.height;\n      var deltaW = width - this.props.width;\n      var deltaH = height - this.props.height; // Find which coordinate was greater and should push the other toward it.\n      // E.g.:\n      // ratio = 1, deltaW = 10, deltaH = 5, deltaH should become 10.\n      // ratio = 2, deltaW = 10, deltaH = 6, deltaW should become 12.\n\n      if (Math.abs(deltaW) > Math.abs(deltaH * ratio)) {\n        height = width / ratio;\n      } else {\n        width = height * ratio;\n      }\n    }\n\n    var oldW = width,\n        oldH = height; // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n\n    var _ref = this.slack || [0, 0],\n        slackW = _ref[0],\n        slackH = _ref[1];\n\n    width += slackW;\n    height += slackH;\n\n    if (minConstraints) {\n      width = Math.max(minConstraints[0], width);\n      height = Math.max(minConstraints[1], height);\n    }\n\n    if (maxConstraints) {\n      width = Math.min(maxConstraints[0], width);\n      height = Math.min(maxConstraints[1], height);\n    } // If the width or height changed, we must have introduced some slack. Record it for the next iteration.\n\n\n    this.slack = [slackW + (oldW - width), slackH + (oldH - height)];\n    return [width, height];\n  }\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n\n    return function (e, _ref2) {\n      var node = _ref2.node,\n          deltaX = _ref2.deltaX,\n          deltaY = _ref2.deltaY; // Reset data in case it was left over somehow (should not be possible)\n\n      if (handlerName === 'onResizeStart') _this2.resetData(); // Axis restrictions\n\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && axis !== 'n' && axis !== 's';\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && axis !== 'e' && axis !== 'w'; // No dragging possible.\n\n      if (!canDragX && !canDragY) return; // Decompose axis for later use\n\n      var axisV = axis[0];\n      var axisH = axis[axis.length - 1]; // intentionally not axis[1], so that this catches axis === 'w' for example\n      // Track the element being dragged to account for changes in position.\n      // If a handle's position is changed between callbacks, we need to factor this in to the next callback.\n      // Failure to do so will cause the element to \"skip\" when resized upwards or leftwards.\n\n      var handleRect = node.getBoundingClientRect();\n\n      if (_this2.lastHandleRect != null) {\n        // If the handle has repositioned on either axis since last render,\n        // we need to increase our callback values by this much.\n        // Only checking 'n', 'w' since resizing by 's', 'w' won't affect the overall position on page,\n        if (axisH === 'w') {\n          var deltaLeftSinceLast = handleRect.left - _this2.lastHandleRect.left;\n          deltaX += deltaLeftSinceLast;\n        }\n\n        if (axisV === 'n') {\n          var deltaTopSinceLast = handleRect.top - _this2.lastHandleRect.top;\n          deltaY += deltaTopSinceLast;\n        }\n      } // Storage of last rect so we know how much it has really moved.\n\n\n      _this2.lastHandleRect = handleRect; // Reverse delta if using top or left drag handles.\n\n      if (axisH === 'w') deltaX = -deltaX;\n      if (axisV === 'n') deltaY = -deltaY; // Update w/h by the deltas. Also factor in transformScale.\n\n      var width = _this2.props.width + (canDragX ? deltaX / _this2.props.transformScale : 0);\n      var height = _this2.props.height + (canDragY ? deltaY / _this2.props.transformScale : 0); // Run user-provided constraints.\n\n      var _this2$runConstraints = _this2.runConstraints(width, height);\n\n      width = _this2$runConstraints[0];\n      height = _this2$runConstraints[1];\n      var dimensionsChanged = width !== _this2.props.width || height !== _this2.props.height; // Call user-supplied callback if present.\n\n      var cb = typeof _this2.props[handlerName] === 'function' ? _this2.props[handlerName] : null; // Don't call 'onResize' if dimensions haven't changed.\n\n      var shouldSkipCb = handlerName === 'onResize' && !dimensionsChanged;\n\n      if (cb && !shouldSkipCb) {\n        e.persist == null ? void 0 : e.persist();\n        cb(e, {\n          node: node,\n          size: {\n            width: width,\n            height: height\n          },\n          handle: axis\n        });\n      } // Reset internal data\n\n\n      if (handlerName === 'onResizeStop') _this2.resetData();\n    };\n  } // Render a resize handle given an axis & DOM ref. Ref *must* be attached for\n  // the underlying draggable library to work properly.\n  ;\n\n  _proto.renderResizeHandle = function renderResizeHandle(handleAxis, ref) {\n    var handle = this.props.handle; // No handle provided, make the default\n\n    if (!handle) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"react-resizable-handle react-resizable-handle-\" + handleAxis,\n        ref: ref\n      });\n    } // Handle is a function, such as:\n    // `handle={(handleAxis) => <span className={...} />}`\n\n\n    if (typeof handle === 'function') {\n      return handle(handleAxis, ref);\n    } // Handle is a React component (composite or DOM).\n\n\n    var isDOMElement = typeof handle.type === 'string';\n\n    var props = _objectSpread({\n      ref: ref\n    }, isDOMElement ? {} : {\n      handleAxis: handleAxis\n    });\n\n    return /*#__PURE__*/React.cloneElement(handle, props);\n  };\n\n  _proto.render = function render() {\n    var _this3 = this; // Pass along only props not meant for the `<Resizable>`.`\n    // eslint-disable-next-line no-unused-vars\n\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        className = _this$props2.className,\n        draggableOpts = _this$props2.draggableOpts,\n        width = _this$props2.width,\n        height = _this$props2.height,\n        handle = _this$props2.handle,\n        handleSize = _this$props2.handleSize,\n        lockAspectRatio = _this$props2.lockAspectRatio,\n        axis = _this$props2.axis,\n        minConstraints = _this$props2.minConstraints,\n        maxConstraints = _this$props2.maxConstraints,\n        onResize = _this$props2.onResize,\n        onResizeStop = _this$props2.onResizeStop,\n        onResizeStart = _this$props2.onResizeStart,\n        resizeHandles = _this$props2.resizeHandles,\n        transformScale = _this$props2.transformScale,\n        p = _objectWithoutPropertiesLoose(_this$props2, _excluded); // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // 1. Its original children (resizable's child's children), and\n    // 2. One or more draggable handles.\n\n\n    return (0, _utils.cloneElement)(children, _objectSpread(_objectSpread({}, p), {}, {\n      className: (className ? className + \" \" : '') + \"react-resizable\",\n      children: [].concat(children.props.children, resizeHandles.map(function (handleAxis) {\n        var _this3$handleRefs$han; // Create a ref to the handle so that `<DraggableCore>` doesn't have to use ReactDOM.findDOMNode().\n\n\n        var ref = (_this3$handleRefs$han = _this3.handleRefs[handleAxis]) != null ? _this3$handleRefs$han : _this3.handleRefs[handleAxis] = /*#__PURE__*/React.createRef();\n        return /*#__PURE__*/React.createElement(_reactDraggable.DraggableCore, _extends({}, draggableOpts, {\n          nodeRef: ref,\n          key: \"resizableHandle-\" + handleAxis,\n          onStop: _this3.resizeHandler('onResizeStop', handleAxis),\n          onStart: _this3.resizeHandler('onResizeStart', handleAxis),\n          onDrag: _this3.resizeHandler('onResize', handleAxis)\n        }), _this3.renderResizeHandle(handleAxis, ref));\n      }))\n    }));\n  };\n\n  return Resizable;\n}(React.Component);\n\nexports.default = Resizable;\nResizable.propTypes = _propTypes.resizableProps;\nResizable.defaultProps = {\n  axis: 'both',\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se'],\n  transformScale: 1\n};","map":{"version":3,"sources":["/Users/jakemartin/Documents/table-scanner-fullstack/frontend/node_modules/react-resizable/build/Resizable.js"],"names":["exports","__esModule","default","React","_interopRequireWildcard","require","_reactDraggable","_utils","_propTypes","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_inheritsLoose","subClass","superClass","create","constructor","_setPrototypeOf","o","p","setPrototypeOf","__proto__","Resizable","_React$Component","_this","_len","args","Array","_key","concat","handleRefs","lastHandleRect","slack","_proto","componentWillUnmount","resetData","runConstraints","width","height","_this$props","props","minConstraints","maxConstraints","lockAspectRatio","ratio","deltaW","deltaH","Math","abs","oldW","oldH","_ref","slackW","slackH","max","min","resizeHandler","handlerName","axis","_this2","e","_ref2","node","deltaX","deltaY","canDragX","canDragY","axisV","axisH","handleRect","getBoundingClientRect","deltaLeftSinceLast","left","deltaTopSinceLast","top","transformScale","_this2$runConstraints","dimensionsChanged","cb","shouldSkipCb","persist","size","handle","renderResizeHandle","handleAxis","ref","createElement","className","isDOMElement","type","cloneElement","render","_this3","_this$props2","children","draggableOpts","handleSize","onResize","onResizeStop","onResizeStart","resizeHandles","map","_this3$handleRefs$han","createRef","DraggableCore","nodeRef","onStop","onStart","onDrag","Component","propTypes","resizableProps","defaultProps","Infinity"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactDraggable = require(\"react-draggable\");\nvar _utils = require(\"./utils\");\nvar _propTypes = require(\"./propTypes\");\nvar _excluded = [\"children\", \"className\", \"draggableOpts\", \"width\", \"height\", \"handle\", \"handleSize\", \"lockAspectRatio\", \"axis\", \"minConstraints\", \"maxConstraints\", \"onResize\", \"onResizeStop\", \"onResizeStart\", \"resizeHandles\", \"transformScale\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n// The base <Resizable> component.\n// This component does not have state and relies on the parent to set its props based on callback data.\nvar Resizable = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Resizable, _React$Component);\n  function Resizable() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.handleRefs = {};\n    _this.lastHandleRect = null;\n    _this.slack = null;\n    return _this;\n  }\n  var _proto = Resizable.prototype;\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.resetData();\n  };\n  _proto.resetData = function resetData() {\n    this.lastHandleRect = this.slack = null;\n  }\n\n  // Clamp width and height within provided constraints\n  ;\n  _proto.runConstraints = function runConstraints(width, height) {\n    var _this$props = this.props,\n      minConstraints = _this$props.minConstraints,\n      maxConstraints = _this$props.maxConstraints,\n      lockAspectRatio = _this$props.lockAspectRatio;\n    // short circuit\n    if (!minConstraints && !maxConstraints && !lockAspectRatio) return [width, height];\n\n    // If constraining to min and max, we need to also fit width and height to aspect ratio.\n    if (lockAspectRatio) {\n      var ratio = this.props.width / this.props.height;\n      var deltaW = width - this.props.width;\n      var deltaH = height - this.props.height;\n\n      // Find which coordinate was greater and should push the other toward it.\n      // E.g.:\n      // ratio = 1, deltaW = 10, deltaH = 5, deltaH should become 10.\n      // ratio = 2, deltaW = 10, deltaH = 6, deltaW should become 12.\n      if (Math.abs(deltaW) > Math.abs(deltaH * ratio)) {\n        height = width / ratio;\n      } else {\n        width = height * ratio;\n      }\n    }\n    var oldW = width,\n      oldH = height;\n\n    // Add slack to the values used to calculate bound position. This will ensure that if\n    // we start removing slack, the element won't react to it right away until it's been\n    // completely removed.\n    var _ref = this.slack || [0, 0],\n      slackW = _ref[0],\n      slackH = _ref[1];\n    width += slackW;\n    height += slackH;\n    if (minConstraints) {\n      width = Math.max(minConstraints[0], width);\n      height = Math.max(minConstraints[1], height);\n    }\n    if (maxConstraints) {\n      width = Math.min(maxConstraints[0], width);\n      height = Math.min(maxConstraints[1], height);\n    }\n\n    // If the width or height changed, we must have introduced some slack. Record it for the next iteration.\n    this.slack = [slackW + (oldW - width), slackH + (oldH - height)];\n    return [width, height];\n  }\n\n  /**\n   * Wrapper around drag events to provide more useful data.\n   *\n   * @param  {String} handlerName Handler name to wrap.\n   * @return {Function}           Handler function.\n   */;\n  _proto.resizeHandler = function resizeHandler(handlerName, axis) {\n    var _this2 = this;\n    return function (e, _ref2) {\n      var node = _ref2.node,\n        deltaX = _ref2.deltaX,\n        deltaY = _ref2.deltaY;\n      // Reset data in case it was left over somehow (should not be possible)\n      if (handlerName === 'onResizeStart') _this2.resetData();\n\n      // Axis restrictions\n      var canDragX = (_this2.props.axis === 'both' || _this2.props.axis === 'x') && axis !== 'n' && axis !== 's';\n      var canDragY = (_this2.props.axis === 'both' || _this2.props.axis === 'y') && axis !== 'e' && axis !== 'w';\n      // No dragging possible.\n      if (!canDragX && !canDragY) return;\n\n      // Decompose axis for later use\n      var axisV = axis[0];\n      var axisH = axis[axis.length - 1]; // intentionally not axis[1], so that this catches axis === 'w' for example\n\n      // Track the element being dragged to account for changes in position.\n      // If a handle's position is changed between callbacks, we need to factor this in to the next callback.\n      // Failure to do so will cause the element to \"skip\" when resized upwards or leftwards.\n      var handleRect = node.getBoundingClientRect();\n      if (_this2.lastHandleRect != null) {\n        // If the handle has repositioned on either axis since last render,\n        // we need to increase our callback values by this much.\n        // Only checking 'n', 'w' since resizing by 's', 'w' won't affect the overall position on page,\n        if (axisH === 'w') {\n          var deltaLeftSinceLast = handleRect.left - _this2.lastHandleRect.left;\n          deltaX += deltaLeftSinceLast;\n        }\n        if (axisV === 'n') {\n          var deltaTopSinceLast = handleRect.top - _this2.lastHandleRect.top;\n          deltaY += deltaTopSinceLast;\n        }\n      }\n      // Storage of last rect so we know how much it has really moved.\n      _this2.lastHandleRect = handleRect;\n\n      // Reverse delta if using top or left drag handles.\n      if (axisH === 'w') deltaX = -deltaX;\n      if (axisV === 'n') deltaY = -deltaY;\n\n      // Update w/h by the deltas. Also factor in transformScale.\n      var width = _this2.props.width + (canDragX ? deltaX / _this2.props.transformScale : 0);\n      var height = _this2.props.height + (canDragY ? deltaY / _this2.props.transformScale : 0);\n\n      // Run user-provided constraints.\n      var _this2$runConstraints = _this2.runConstraints(width, height);\n      width = _this2$runConstraints[0];\n      height = _this2$runConstraints[1];\n      var dimensionsChanged = width !== _this2.props.width || height !== _this2.props.height;\n\n      // Call user-supplied callback if present.\n      var cb = typeof _this2.props[handlerName] === 'function' ? _this2.props[handlerName] : null;\n      // Don't call 'onResize' if dimensions haven't changed.\n      var shouldSkipCb = handlerName === 'onResize' && !dimensionsChanged;\n      if (cb && !shouldSkipCb) {\n        e.persist == null ? void 0 : e.persist();\n        cb(e, {\n          node: node,\n          size: {\n            width: width,\n            height: height\n          },\n          handle: axis\n        });\n      }\n\n      // Reset internal data\n      if (handlerName === 'onResizeStop') _this2.resetData();\n    };\n  }\n\n  // Render a resize handle given an axis & DOM ref. Ref *must* be attached for\n  // the underlying draggable library to work properly.\n  ;\n  _proto.renderResizeHandle = function renderResizeHandle(handleAxis, ref) {\n    var handle = this.props.handle;\n    // No handle provided, make the default\n    if (!handle) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"react-resizable-handle react-resizable-handle-\" + handleAxis,\n        ref: ref\n      });\n    }\n    // Handle is a function, such as:\n    // `handle={(handleAxis) => <span className={...} />}`\n    if (typeof handle === 'function') {\n      return handle(handleAxis, ref);\n    }\n    // Handle is a React component (composite or DOM).\n    var isDOMElement = typeof handle.type === 'string';\n    var props = _objectSpread({\n      ref: ref\n    }, isDOMElement ? {} : {\n      handleAxis: handleAxis\n    });\n    return /*#__PURE__*/React.cloneElement(handle, props);\n  };\n  _proto.render = function render() {\n    var _this3 = this;\n    // Pass along only props not meant for the `<Resizable>`.`\n    // eslint-disable-next-line no-unused-vars\n    var _this$props2 = this.props,\n      children = _this$props2.children,\n      className = _this$props2.className,\n      draggableOpts = _this$props2.draggableOpts,\n      width = _this$props2.width,\n      height = _this$props2.height,\n      handle = _this$props2.handle,\n      handleSize = _this$props2.handleSize,\n      lockAspectRatio = _this$props2.lockAspectRatio,\n      axis = _this$props2.axis,\n      minConstraints = _this$props2.minConstraints,\n      maxConstraints = _this$props2.maxConstraints,\n      onResize = _this$props2.onResize,\n      onResizeStop = _this$props2.onResizeStop,\n      onResizeStart = _this$props2.onResizeStart,\n      resizeHandles = _this$props2.resizeHandles,\n      transformScale = _this$props2.transformScale,\n      p = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n\n    // What we're doing here is getting the child of this element, and cloning it with this element's props.\n    // We are then defining its children as:\n    // 1. Its original children (resizable's child's children), and\n    // 2. One or more draggable handles.\n    return (0, _utils.cloneElement)(children, _objectSpread(_objectSpread({}, p), {}, {\n      className: (className ? className + \" \" : '') + \"react-resizable\",\n      children: [].concat(children.props.children, resizeHandles.map(function (handleAxis) {\n        var _this3$handleRefs$han;\n        // Create a ref to the handle so that `<DraggableCore>` doesn't have to use ReactDOM.findDOMNode().\n        var ref = (_this3$handleRefs$han = _this3.handleRefs[handleAxis]) != null ? _this3$handleRefs$han : _this3.handleRefs[handleAxis] = /*#__PURE__*/React.createRef();\n        return /*#__PURE__*/React.createElement(_reactDraggable.DraggableCore, _extends({}, draggableOpts, {\n          nodeRef: ref,\n          key: \"resizableHandle-\" + handleAxis,\n          onStop: _this3.resizeHandler('onResizeStop', handleAxis),\n          onStart: _this3.resizeHandler('onResizeStart', handleAxis),\n          onDrag: _this3.resizeHandler('onResize', handleAxis)\n        }), _this3.renderResizeHandle(handleAxis, ref));\n      }))\n    }));\n  };\n  return Resizable;\n}(React.Component);\nexports.default = Resizable;\nResizable.propTypes = _propTypes.resizableProps;\nResizable.defaultProps = {\n  axis: 'both',\n  handleSize: [20, 20],\n  lockAspectRatio: false,\n  minConstraints: [20, 20],\n  maxConstraints: [Infinity, Infinity],\n  resizeHandles: ['se'],\n  transformScale: 1\n};"]},"metadata":{},"sourceType":"script"}